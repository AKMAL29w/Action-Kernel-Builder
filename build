#!/bin/sh

WORK="${HOME}/work"
KERNEL_SRC="${WORK}/kernel-msm"
mkdir -p "${WORK}"
cd "${WORK}" || exit 1

# Setup stuff
case * in
	clang) mkdir clang && curl -Lsq https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/android11-release/clang-r383902.tar.gz -o - | tar -xzf - -C clang ;;
	binutils) git clone --depth=1 https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 -b android11-release binutils ;;
	binutils-32) git clone --depth=1 https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9 -b android11-release binutils-32 ;;
	kernel-msm) git clone --depth=1 https://github.com/thecatvoid/android_kernel_motorola_guamp kernel-msm ;;
esac

# Set toolchain path
PATH="${WORK}/clang/bin:${WORK}/binutils/bin:${WORK}/binutils-32/bin:/bin"

# Build kernel
cd "${KERNEL_SRC}" || exit 1

# Android cross compile make function
make_fun() {
	make O=out ARCH=arm64 \
		CC=clang HOSTCC=clang \
		CLANG_TRIPLE=aarch64-linux-gnu- \
		CROSS_COMPILE=aarch64-linux-android- \
		CROSS_COMPILE_ARM32=arm-linux-androideabi- "$@" 
}

# Make defconfig
make_fun vendor/guamp_defconfig

# Make kernel
make_fun -j"$(nproc --all)"

# Upload built kernel
cd "${WORK}" || exit
[ ! -d ANY ] && git clone --depth=1 https://github.com/thecatvoid/AnyKernel3.git ANY
cd ANY || exit 1
rm -rf ./*Image* ./*.zip
cp "${KERNEL_SRC}/out/arch/arm64/boot/Image.gz-dtb" ./
dates="$(date +%F+%T%z)"
zip -r9 "${dates}.zip" ./* -x .git README.md ./*placeholder
curl -T "${dates}.zip" temp.sh
