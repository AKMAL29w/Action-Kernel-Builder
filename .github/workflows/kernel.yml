name: Build Kernel

on: 
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Set Properties # Output will be use in final name of recovery.
      id: props
      run: |
        echo "date=$(TZ=Asia/Manila date +%Y%m%d%I%M%p)" >> $GITHUB_OUTPUT
      
    - name: Start Building Kernel
      run: |
        ./build

    - name: Release
      uses: ncipollo/release-action@v1.11.1
      with:
        artifacts: |
          /home/runner/work/ANY/*.zip
          /home/runner/work/your-kernel/out/arch/arm64/boot/*.zip
        name: Action-Kernel-Builder Release
        draft: false
        prerelease: true
        tag: ${{ github.run_id }}-${{ steps.props.outputs.date }}
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          ## Action-Kernel-Builder: ${{ steps.props.outputs.date }}
          - Notes:
            - Do not flash the .zip, this includes all files in out/boot folder.
            - Some kernel build has different name (Image, Image.gz-dtb) so instead of compressing only the kernel itself as flashable, this builder compressed the whole boot/ folder.
            - Find your Kernel in boot/ folder inside the .zip file.
          - Flash:
            - Download `AnyKernel3.zip` and `your-kernel-here-xxxxxxx.zip`, extract both.
            - Copy the kernel inside the your-kernel-here-xxxxxxx folder, paste it in AnyKernel3 folder and compressed it.
            - Flash it via twrp or magisk.

    - name: Link of Release
      run: |
        echo "Enjoy your Newly Built Kernel"
        echo "https://github.com/${GITHUB_REPOSITORY}/releases/tag/${{ github.run_id }}-${{ steps.props.outputs.date }}"
